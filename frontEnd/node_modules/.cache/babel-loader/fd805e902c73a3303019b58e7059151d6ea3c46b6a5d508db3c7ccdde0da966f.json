{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axisJson from '../../../backEnd/data/axis2.json';\nimport pointJson2 from '../../../backEnd/data/point_2.json';\nimport pointJson3 from '../../../backEnd/data/point_3.json';\nimport pointJson4 from '../../../backEnd/data/point_4.json';\nimport pointJson5 from '../../../backEnd/data/point_5.json';\nimport pointJson6 from '../../../backEnd/data/point_6.json';\nimport * as d3 from 'd3';\nexport default {\n  name: 'view3_2',\n  data() {\n    return {\n      chartValue: {\n        showAll: [14, 18, 25, 24, 22, 7],\n        file: [pointJson2, pointJson3, pointJson4, pointJson5, pointJson6]\n      },\n      chartConfig: {\n        margin: 0,\n        squareValue: 270,\n        axisValue: [30, 80, 130, 180, 230],\n        pointColor: [['#C8C8C8', '#000082', '#008200', '#820000', '#828200', '#820082'], ['#000000', '#0000FF', '#00FF00', '#FF0000', '#FFFF00', '#FF00FF']]\n      }\n    };\n  },\n  methods: {\n    getColor(idx, proportion) {\n      const palette = [\n      // 从上到下：绿黄蓝紫灰红\n      ['#C8C8FF', '#000082'], ['#C8FFC8', '#008200'], ['#FFC8C8', '#820000'], ['#C8FFC8', '#008200'], ['#FFC8C8', '#820000'], ['#C8FFC8', '#008200']];\n      const i = d3.interpolateLab(palette[idx][0], palette[idx][1]);\n      return i(proportion);\n    },\n    creatScatterChart() {\n      // D3画图中this指代对象会发生改变\n      const that = this;\n      const main = d3.select('.container svg').append('g').classed('main', true).attr('transform', 'translate(' + 0 + ',' + 0 + ')');\n      const coordinations = that.calSquareCoordinates(4);\n      const squares = main.append('g').classed('squares', true);\n      squares.selectAll('g').data(coordinations).enter().append('g').attr('class', function (d, i) {\n        return 'square' + (i + 1);\n      });\n      for (let i = 0; i < coordinations.length; i++) {\n        const square = squares.select('.square' + (i + 1));\n        const coordination = coordinations[i];\n        square.append('rect').attr('x', coordination.x).attr('y', coordination.y).attr('width', that.chartConfig.squareValue).attr('height', that.chartConfig.squareValue)\n        // .attr('stroke', 'red')\n        .attr('fill', 'none');\n        const axiss = square.append('g').classed('axiss', true).attr('transform', 'translate(' + coordination.x + ',' + coordination.y + ')');\n        axiss.selectAll('g').data(that.getAxiss()[that.chartValue.showAll[i]]).enter().append('g').attr('class', function (d, i) {\n          return 'axis' + (i + 1);\n        });\n        const smallSquares = square.append('g').classed('smallSquares', true).attr('transform', 'translate(' + coordination.x + ',' + coordination.y + ')');\n        smallSquares.selectAll('g').data(that.getAxiss()[that.chartValue.showAll[i]]).enter().append('g').attr('class', function (d, i) {\n          return 'smallSquare' + (i + 1);\n        });\n        for (let k = 0; k < that.getAxiss()[that.chartValue.showAll[i]].length; k++) {\n          const axis = axiss.select('.axis' + (k + 1));\n          const smallSquare = smallSquares.select('.smallSquare' + (k + 1));\n          if (i % 2 === 0) {\n            axis.append('rect')\n            // 按照 4 3 2 1 0进行作图\n            .attr('x', that.chartConfig.axisValue[that.getAxiss()[that.chartValue.showAll[i]].length - 1 - k] + 5).attr('y', 10).attr('width', 40).attr('height', 10).attr('fill', function (d, index) {\n              return that.getColor(i, that.getAxiss()[that.chartValue.showAll[i]][k].proportion);\n            });\n            for (let j = 0; j < that.getAxiss()[that.chartValue.showAll[i]].length; j++) {\n              smallSquare.append('rect').attr('x', that.chartConfig.axisValue[k]).attr('y', that.chartConfig.axisValue[j]).attr('width', 50).attr('height', 50).attr('fill', 'none').attr('stroke-width', 1).attr('stroke', 'black').attr('stroke-dasharray', 2);\n            }\n          } else {\n            axis.append('rect').attr('y', that.chartConfig.axisValue[that.getAxiss()[that.chartValue.showAll[i]].length - 1 - k] + 5).attr('x', 10).attr('width', 10).attr('height', 40).attr('fill', function (d, index) {\n              return that.getColor(i, that.getAxiss()[that.chartValue.showAll[i]][k].proportion);\n            });\n            for (let j = 0; j < that.getAxiss()[that.chartValue.showAll[i]].length; j++) {\n              smallSquare.append('rect').attr('x', that.chartConfig.axisValue[j]).attr('y', that.chartConfig.axisValue[k]).attr('width', 50).attr('height', 50).attr('fill', 'none').attr('stroke-width', 1).attr('stroke', 'black').attr('stroke-dasharray', 2);\n            }\n          }\n        }\n        const pointsData = that.getPoints(that.chartValue.file[i], 0);\n        const pointsCoordinates = that.calPointsCoordinates(pointsData.points, that.getAxiss()[that.chartValue.showAll[i]], that.getAxiss()[that.chartValue.showAll[i + 1]], i % 2);\n        const points = main.append('g').classed('points', true);\n        points.selectAll('points').data(pointsCoordinates).enter().append('circle').attr('cx', function (d) {\n          return d.x + coordinations[i].x;\n        }).attr('cy', function (d) {\n          return d.y + coordinations[i].y;\n        }).attr('r', 3).attr('fill', function (d) {\n          return d.pointColor;\n        });\n        const starsCoordinates = that.calPointsCoordinates(pointsData.stars, that.getAxiss()[that.chartValue.showAll[i]], that.getAxiss()[that.chartValue.showAll[i + 1]], i % 2);\n        const star = main.append('g').attr('transform', 'translate(' + (starsCoordinates[0].x + coordinations[i].x) + ',' + (starsCoordinates[0].y + coordinations[i].y) + ')').append('path').attr('d', d3.symbol().type(d3.symbolStar).size(40)).attr('stroke', 'black').attr('stroke-width', 'black');\n        star.attr('fill', starsCoordinates[0].pointColor);\n      }\n    },\n    // 获取axis.json文件里的数据，返回一个26*5的数组，元素为min，max，proportion\n    getAxiss() {\n      // keys为第一层26个title\n      // key1为里面title，就一个，只有0可用\n      // 读取数组里范围的格式：axisJson[keys[0]][0][keys1[0]][0][0]\n      // 读取数组里比例的格式：axisJson[keys[0]][0][keys1[0]][1]\n      const keys = Object.keys(axisJson);\n      const axiss = [];\n      for (let i = 0; i < keys.length; i++) {\n        const axis = [];\n        for (let k = 0; k < axisJson[keys[i]].length; k++) {\n          const key1 = Object.keys(axisJson[keys[i]][k]);\n          const min = axisJson[keys[i]][k][key1[0]][0][0];\n          const max = axisJson[keys[i]][k][key1[0]][0][1];\n          const proportion = axisJson[keys[i]][k][key1[0]][1];\n          axis.push({\n            min: min,\n            max: max,\n            proportion: proportion\n          });\n        }\n        axiss.push(axis);\n      }\n      return axiss;\n    },\n    // 获取point和point_obj文件里点的数据，返回一个数组，元素为x,y,axis\n    getPoints(fileName, highLight) {\n      const pointsFile = fileName;\n      const pointKeys = Object.keys(pointsFile);\n      const points = [];\n      const stars = [];\n      for (let i = 0; i < pointKeys.length; i++) {\n        const x = pointsFile[pointKeys[i]][0][0];\n        const y = pointsFile[pointKeys[i]][0][1];\n        if (x !== '0.00' && y !== '0.00' && pointsFile[pointKeys[i]][3] === 0) {\n          const num1 = pointsFile[pointKeys[i]][1];\n          const num2 = pointsFile[pointKeys[i]][2];\n          points.push({\n            name: pointKeys[i],\n            x: x,\n            y: y,\n            pointColor: highLight === num2 ? this.chartConfig.pointColor[1][num1 + 1] : this.chartConfig.pointColor[0][num1 + 1]\n          });\n        } else if (x !== '0.00' && y !== '0.00' && pointsFile[pointKeys[i]][3] === 1) {\n          const num1 = pointsFile[pointKeys[i]][1];\n          const num2 = pointsFile[pointKeys[i]][2];\n          stars.push({\n            name: pointKeys[i],\n            x: x,\n            y: y,\n            pointColor: highLight === num2 ? this.chartConfig.pointColor[1][num1 + 1] : this.chartConfig.pointColor[0][num1 + 1]\n          });\n        }\n      }\n      const point = {\n        points: points,\n        stars: stars\n      };\n      return point;\n    },\n    // 传入数据分别为点数据，本轴数据，外轴数据，奇偶判别\n    // 按轴输出点的坐标,以及对应的颜色\n    calPointsCoordinates(pointsData, axisData1, axisData2, flag) {\n      const points = [];\n      for (let i = 0; i < pointsData.length; i++) {\n        const sliceX = this.calSliceY(pointsData[i].x, axisData1);\n        const sliceY = this.calSliceY(pointsData[i].y, axisData2);\n        console.log('1');\n        if (flag === 0) {\n          const x = this.chartConfig.axisValue[axisData1.length - 1 - sliceX] + 40 - (pointsData[i].x - axisData1[sliceX].min) / (axisData1[sliceX].max - axisData1[sliceX].min) * 40;\n          const y = this.chartConfig.axisValue[axisData2.length - 1 - sliceY] + 40 - (pointsData[i].y - axisData2[sliceY].min) / (axisData2[sliceY].max - axisData2[sliceY].min) * 40;\n          points.push({\n            x: x,\n            y: y,\n            pointColor: pointsData[i].pointColor\n          });\n        } else {\n          const y = this.chartConfig.axisValue[axisData1.length - 1 - sliceX] + 40 - (pointsData[i].x - axisData1[sliceX].min) / (axisData1[sliceX].max - axisData1[sliceX].min) * 40;\n          const x = this.chartConfig.axisValue[axisData2.length - 1 - sliceY] + 40 - (pointsData[i].y - axisData2[sliceY].min) / (axisData2[sliceY].max - axisData2[sliceY].min) * 40;\n          points.push({\n            x: x,\n            y: y,\n            pointColor: pointsData[i].pointColor\n          });\n        }\n      }\n      return points;\n    },\n    calSliceY(y, axisData) {\n      for (let i = 0; i < axisData.length; i++) {\n        if (y <= axisData[i].max && y >= axisData[i].min) {\n          return i;\n        }\n      }\n    },\n    // 计算大正方形的起点坐标，idx为第idx个\n    calSquareCoordinates(idx) {\n      const coordinations = [];\n      for (let i = 0; i <= idx; i++) {\n        coordinations.push(i % 2 === 0 ? {\n          x: i / 2 * this.chartConfig.squareValue,\n          y: i / 2 * this.chartConfig.squareValue\n        } : {\n          x: (i + 1) / 2 * this.chartConfig.squareValue,\n          y: (i - 1) / 2 * this.chartConfig.squareValue\n        });\n      }\n      return coordinations;\n    }\n  },\n  mounted() {\n    this.creatScatterChart();\n  }\n};","map":{"version":3,"names":["axisJson","pointJson2","pointJson3","pointJson4","pointJson5","pointJson6","d3","name","data","chartValue","showAll","file","chartConfig","margin","squareValue","axisValue","pointColor","methods","getColor","idx","proportion","palette","i","interpolateLab","creatScatterChart","that","main","select","append","classed","attr","coordinations","calSquareCoordinates","squares","selectAll","enter","d","length","square","coordination","x","y","axiss","getAxiss","smallSquares","k","axis","smallSquare","index","j","pointsData","getPoints","pointsCoordinates","calPointsCoordinates","points","starsCoordinates","stars","star","symbol","type","symbolStar","size","keys","Object","key1","min","max","push","fileName","highLight","pointsFile","pointKeys","num1","num2","point","axisData1","axisData2","flag","sliceX","calSliceY","sliceY","console","log","axisData","mounted"],"sources":["/Users/gumingyang/Documents/GitHub/YbcCompletionProject/frontEnd/src/components/view32.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <svg width=\"100%\" height=\"100%\"></svg>\n  </div>\n  <button @click=\"creatScatterChart\">111</button>\n</template>\n\n<script>\nimport axisJson from '../../../backEnd/data/axis2.json'\nimport pointJson2 from '../../../backEnd/data/point_2.json'\nimport pointJson3 from '../../../backEnd/data/point_3.json'\nimport pointJson4 from '../../../backEnd/data/point_4.json'\nimport pointJson5 from '../../../backEnd/data/point_5.json'\nimport pointJson6 from '../../../backEnd/data/point_6.json'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'view3_2',\n  data () {\n    return {\n      chartValue: {\n        showAll: [14, 18, 25, 24, 22, 7],\n        file: [pointJson2, pointJson3, pointJson4, pointJson5, pointJson6]\n      },\n      chartConfig: {\n        margin: 0,\n        squareValue: 270,\n        axisValue: [30, 80, 130, 180, 230],\n        pointColor: [\n          ['#C8C8C8', '#000082', '#008200', '#820000', '#828200', '#820082'],\n          ['#000000', '#0000FF', '#00FF00', '#FF0000', '#FFFF00', '#FF00FF']\n        ]\n      }\n    }\n  },\n  methods: {\n    getColor (idx, proportion) {\n      const palette = [ // 从上到下：绿黄蓝紫灰红\n        ['#C8C8FF', '#000082'],\n        ['#C8FFC8', '#008200'],\n        ['#FFC8C8', '#820000'],\n        ['#C8FFC8', '#008200'],\n        ['#FFC8C8', '#820000'],\n        ['#C8FFC8', '#008200']\n      ]\n      const i = d3.interpolateLab(palette[idx][0], palette[idx][1])\n      return i(proportion)\n    },\n    creatScatterChart () {\n      // D3画图中this指代对象会发生改变\n      const that = this\n      const main = d3.select('.container svg')\n        .append('g')\n        .classed('main', true)\n        .attr('transform', 'translate(' + 0 + ',' + 0 + ')')\n      const coordinations = that.calSquareCoordinates(4)\n      const squares = main.append('g')\n        .classed('squares', true)\n      squares.selectAll('g')\n        .data(coordinations)\n        .enter()\n        .append('g')\n        .attr('class', function (d, i) {\n          return 'square' + (i + 1)\n        })\n      for (let i = 0; i < coordinations.length; i++) {\n        const square = squares.select('.square' + (i + 1))\n        const coordination = coordinations[i]\n        square.append('rect')\n          .attr('x', coordination.x)\n          .attr('y', coordination.y)\n          .attr('width', that.chartConfig.squareValue)\n          .attr('height', that.chartConfig.squareValue)\n          // .attr('stroke', 'red')\n          .attr('fill', 'none')\n        const axiss = square.append('g')\n          .classed('axiss', true)\n          .attr('transform', 'translate(' + coordination.x + ',' + coordination.y + ')')\n        axiss.selectAll('g')\n          .data(that.getAxiss()[that.chartValue.showAll[i]])\n          .enter()\n          .append('g')\n          .attr('class', function (d, i) {\n            return 'axis' + (i + 1)\n          })\n        const smallSquares = square.append('g')\n          .classed('smallSquares', true)\n          .attr('transform', 'translate(' + coordination.x + ',' + coordination.y + ')')\n        smallSquares.selectAll('g')\n          .data(that.getAxiss()[that.chartValue.showAll[i]])\n          .enter()\n          .append('g')\n          .attr('class', function (d, i) {\n            return 'smallSquare' + (i + 1)\n          })\n        for (let k = 0; k < that.getAxiss()[that.chartValue.showAll[i]].length; k++) {\n          const axis = axiss.select('.axis' + (k + 1))\n          const smallSquare = smallSquares.select('.smallSquare' + (k + 1))\n          if (i % 2 === 0) {\n            axis.append('rect')\n              // 按照 4 3 2 1 0进行作图\n              .attr('x', that.chartConfig.axisValue[that.getAxiss()[that.chartValue.showAll[i]].length - 1 - k] + 5)\n              .attr('y', 10)\n              .attr('width', 40)\n              .attr('height', 10)\n              .attr('fill', function (d, index) {\n                return that.getColor(i, that.getAxiss()[that.chartValue.showAll[i]][k].proportion)\n              })\n            for (let j = 0; j < that.getAxiss()[that.chartValue.showAll[i]].length; j++) {\n              smallSquare.append('rect')\n                .attr('x', that.chartConfig.axisValue[k])\n                .attr('y', that.chartConfig.axisValue[j])\n                .attr('width', 50)\n                .attr('height', 50)\n                .attr('fill', 'none')\n                .attr('stroke-width', 1)\n                .attr('stroke', 'black')\n                .attr('stroke-dasharray', 2)\n            }\n          } else {\n            axis.append('rect')\n              .attr('y', that.chartConfig.axisValue[that.getAxiss()[that.chartValue.showAll[i]].length - 1 - k] + 5)\n              .attr('x', 10)\n              .attr('width', 10)\n              .attr('height', 40)\n              .attr('fill', function (d, index) {\n                return that.getColor(i, that.getAxiss()[that.chartValue.showAll[i]][k].proportion)\n              })\n            for (let j = 0; j < that.getAxiss()[that.chartValue.showAll[i]].length; j++) {\n              smallSquare.append('rect')\n                .attr('x', that.chartConfig.axisValue[j])\n                .attr('y', that.chartConfig.axisValue[k])\n                .attr('width', 50)\n                .attr('height', 50)\n                .attr('fill', 'none')\n                .attr('stroke-width', 1)\n                .attr('stroke', 'black')\n                .attr('stroke-dasharray', 2)\n            }\n          }\n        }\n        const pointsData = that.getPoints(that.chartValue.file[i], 0)\n        const pointsCoordinates = that.calPointsCoordinates(pointsData.points, that.getAxiss()[that.chartValue.showAll[i]], that.getAxiss()[that.chartValue.showAll[i + 1]], i % 2)\n        const points = main.append('g')\n          .classed('points', true)\n        points.selectAll('points')\n          .data(pointsCoordinates)\n          .enter()\n          .append('circle')\n          .attr('cx', function (d) {\n            return d.x + coordinations[i].x\n          })\n          .attr('cy', function (d) {\n            return d.y + coordinations[i].y\n          })\n          .attr('r', 3)\n          .attr('fill', function (d) {\n            return d.pointColor\n          })\n        const starsCoordinates = that.calPointsCoordinates(pointsData.stars, that.getAxiss()[that.chartValue.showAll[i]], that.getAxiss()[that.chartValue.showAll[i + 1]], i % 2)\n        const star = main.append('g')\n          .attr('transform', 'translate(' + (starsCoordinates[0].x + coordinations[i].x) + ',' + (starsCoordinates[0].y + coordinations[i].y) + ')')\n          .append('path')\n          .attr('d', d3.symbol().type(d3.symbolStar).size(40))\n          .attr('stroke', 'black')\n          .attr('stroke-width', 'black')\n        star.attr('fill', starsCoordinates[0].pointColor)\n      }\n    },\n    // 获取axis.json文件里的数据，返回一个26*5的数组，元素为min，max，proportion\n    getAxiss () {\n      // keys为第一层26个title\n      // key1为里面title，就一个，只有0可用\n      // 读取数组里范围的格式：axisJson[keys[0]][0][keys1[0]][0][0]\n      // 读取数组里比例的格式：axisJson[keys[0]][0][keys1[0]][1]\n      const keys = Object.keys(axisJson)\n      const axiss = []\n      for (let i = 0; i < keys.length; i++) {\n        const axis = []\n        for (let k = 0; k < axisJson[keys[i]].length; k++) {\n          const key1 = Object.keys(axisJson[keys[i]][k])\n          const min = axisJson[keys[i]][k][key1[0]][0][0]\n          const max = axisJson[keys[i]][k][key1[0]][0][1]\n          const proportion = axisJson[keys[i]][k][key1[0]][1]\n          axis.push({\n            min: min,\n            max: max,\n            proportion: proportion\n          })\n        }\n        axiss.push(axis)\n      }\n      return axiss\n    },\n    // 获取point和point_obj文件里点的数据，返回一个数组，元素为x,y,axis\n    getPoints (fileName, highLight) {\n      const pointsFile = fileName\n      const pointKeys = Object.keys(pointsFile)\n      const points = []\n      const stars = []\n      for (let i = 0; i < pointKeys.length; i++) {\n        const x = pointsFile[pointKeys[i]][0][0]\n        const y = pointsFile[pointKeys[i]][0][1]\n        if (x !== '0.00' && y !== '0.00' && pointsFile[pointKeys[i]][3] === 0) {\n          const num1 = pointsFile[pointKeys[i]][1]\n          const num2 = pointsFile[pointKeys[i]][2]\n          points.push({\n            name: pointKeys[i],\n            x: x,\n            y: y,\n            pointColor: highLight === num2 ? this.chartConfig.pointColor[1][num1 + 1] : this.chartConfig.pointColor[0][num1 + 1]\n          })\n        } else if (x !== '0.00' && y !== '0.00' && pointsFile[pointKeys[i]][3] === 1) {\n          const num1 = pointsFile[pointKeys[i]][1]\n          const num2 = pointsFile[pointKeys[i]][2]\n          stars.push({\n            name: pointKeys[i],\n            x: x,\n            y: y,\n            pointColor: highLight === num2 ? this.chartConfig.pointColor[1][num1 + 1] : this.chartConfig.pointColor[0][num1 + 1]\n          })\n        }\n      }\n      const point = {\n        points: points,\n        stars: stars\n      }\n      return point\n    },\n    // 传入数据分别为点数据，本轴数据，外轴数据，奇偶判别\n    // 按轴输出点的坐标,以及对应的颜色\n    calPointsCoordinates (pointsData, axisData1, axisData2, flag) {\n      const points = []\n      for (let i = 0; i < pointsData.length; i++) {\n        const sliceX = this.calSliceY(pointsData[i].x, axisData1)\n        const sliceY = this.calSliceY(pointsData[i].y, axisData2)\n        console.log('1')\n        if (flag === 0) {\n          const x = this.chartConfig.axisValue[axisData1.length - 1 - sliceX] + 40 - (pointsData[i].x - axisData1[sliceX].min) / (axisData1[sliceX].max - axisData1[sliceX].min) * 40\n          const y = this.chartConfig.axisValue[axisData2.length - 1 - sliceY] + 40 - (pointsData[i].y - axisData2[sliceY].min) / (axisData2[sliceY].max - axisData2[sliceY].min) * 40\n          points.push({\n            x: x,\n            y: y,\n            pointColor: pointsData[i].pointColor\n          })\n        } else {\n          const y = this.chartConfig.axisValue[axisData1.length - 1 - sliceX] + 40 - (pointsData[i].x - axisData1[sliceX].min) / (axisData1[sliceX].max - axisData1[sliceX].min) * 40\n          const x = this.chartConfig.axisValue[axisData2.length - 1 - sliceY] + 40 - (pointsData[i].y - axisData2[sliceY].min) / (axisData2[sliceY].max - axisData2[sliceY].min) * 40\n          points.push({\n            x: x,\n            y: y,\n            pointColor: pointsData[i].pointColor\n          })\n        }\n      }\n      return points\n    },\n    calSliceY (y, axisData) {\n      for (let i = 0; i < axisData.length; i++) {\n        if (y <= axisData[i].max && y >= axisData[i].min) {\n          return i\n        }\n      }\n    },\n    // 计算大正方形的起点坐标，idx为第idx个\n    calSquareCoordinates (idx) {\n      const coordinations = []\n      for (let i = 0; i <= idx; i++) {\n        coordinations.push((i % 2 === 0) ? { x: i / 2 * this.chartConfig.squareValue, y: (i / 2) * this.chartConfig.squareValue } : { x: (i + 1) / 2 * this.chartConfig.squareValue, y: (i - 1) / 2 * this.chartConfig.squareValue })\n      }\n      return coordinations\n    }\n  },\n  mounted () {\n    this.creatScatterChart()\n  }\n}\n</script>\n\n<style scoped>\n\n.container {\n  width: 1200px;\n  height: 900px;\n  /*border: 2px solid black;*/\n}\n\n.smallSquare rect {\n  border: 2px solid black;\n}\n\n.axiss rect {\n  border: 2px solid black;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
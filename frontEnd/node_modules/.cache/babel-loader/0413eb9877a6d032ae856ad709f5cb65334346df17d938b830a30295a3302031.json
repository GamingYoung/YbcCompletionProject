{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport corrInd from '../../../../pyCharm/ybcProject/data/corr_ind.json';\nimport industryRatioJson from '../../../../pyCharm/ybcProject/data/ind_ratio_obj.json';\nimport industryLineJson from '../../../../pyCharm/ybcProject/data/ind_line_obj.json';\nimport copJson from '../../../../pyCharm/ybcProject/data/ind_copp.json';\nimport ringJson from '../../../../pyCharm/ybcProject/data/ring_obj.json';\nimport * as d3 from 'd3';\nexport default {\n  name: 'view_4',\n  data() {\n    return {\n      chartValue: {\n        targetInd: '',\n        correlation: [['', ''], ['', ''], ['', ''], ['', ''], ['', '']]\n      },\n      chartConfig: {\n        monthColor: ['#C5E0B4', '#F8CBAD', '#FFE699', '#E7E6E6'],\n        monthRectWidth: 100,\n        monthRectHeight: 20,\n        circleMinRadius: 5,\n        circleMaxRadius: 15,\n        ringMinRadius: 20,\n        ringMaxRadius: 30,\n        lineRadius: 40\n      }\n    };\n  },\n  computed: {\n    // 计算下面坐标轴长度，逻辑将来在写\n    axisLength: function () {\n      return 4;\n    }\n  },\n  methods: {\n    // 根据比例获取响应颜色\n    getColor(proportion) {\n      const palette = [['#820000', '#FF8282'], ['#008200', '#82FF82']];\n      if (proportion === 0) return '#0000FF';\n      const idx = proportion > 0 ? 0 : 1;\n      const i = d3.interpolateLab(palette[idx][1], palette[idx][0]);\n      return i(proportion);\n    },\n    getColor1(proportion) {\n      const palette = ['#008200', '#60E260'];\n      const i = d3.interpolateLab(palette[1], palette[0]);\n      return i(proportion);\n    },\n    // 画图\n    creatLineChart() {\n      const that = this;\n      const keys = Object.keys(industryRatioJson);\n      const main = d3.select('.container svg').append('g').classed('main', true).attr('transform', 'translate(' + 0 + ',' + 0 + ')');\n\n      // 画彩色坐标轴\n      const rectAxiss = main.append('g').classed('sectors', true);\n      rectAxiss.selectAll('g').data(industryRatioJson[keys[0]] + industryRatioJson[keys[1]]).enter().append('g').attr('class', function (d, i) {\n        return 'rectAxis' + (i + 1);\n      });\n      for (let i = 0; i < industryRatioJson[keys[0]].length + industryRatioJson[keys[1]].length; i++) {\n        const rectAxis = rectAxiss.select('.rectAxis' + (i + 1));\n        if (i < industryRatioJson[keys[0]].length) {\n          rectAxis.append('rect').attr('x', i * that.chartConfig.monthRectWidth + 5 * i).attr('y', 0).attr('width', that.chartConfig.monthRectWidth).attr('height', that.chartConfig.monthRectHeight).attr('fill', that.chartConfig.monthColor[i % 4]);\n        } else {\n          rectAxis.append('rect').attr('x', (i - industryRatioJson[keys[0]].length) * that.chartConfig.monthRectWidth + 5 * (i - 12)).attr('y', 580).attr('width', that.chartConfig.monthRectWidth).attr('height', that.chartConfig.monthRectHeight).attr('fill', that.chartConfig.monthColor[(i - industryRatioJson[keys[0]].length) % 4]);\n        }\n      }\n\n      // 画中间虚线\n      const axis = main.append('line').classed('axis', true);\n      axis.attr('x1', 0).attr('y1', 299).attr('x2', 1790).attr('y2', 299).attr('stroke-width', 2).attr('stroke', 'black').style('stroke-dasharray', '5.5');\n      const linesPoints = this.getLineData(industryRatioJson, industryLineJson, copJson);\n      console.log(linesPoints);\n      // 画圆环\n      const ringsData = that.getRingData(ringJson);\n      const views = main.append('g').classed('views', true);\n      views.selectAll('g').data(ringsData).enter().append('g').attr('class', function (d, i) {\n        return 'view' + (i + 1);\n      });\n      for (let k = 0; k < ringsData.length; k++) {\n        let view = views.select('.view' + (k + 1));\n        view = views.append('g').attr('transform', 'translate(' + 0 + ',' + 0 + ')');\n        const points = view.append('g').classed('points', true);\n        points.selectAll('g').data(ringsData[k]).enter().append('g').attr('class', function (d, i) {\n          return 'point' + (i + 1);\n        });\n        const linesCircles = view.append('g').classed('linesCircles', true);\n        linesCircles.selectAll('g').data(ringsData[k]).enter().append('g').attr('class', function (d, i) {\n          return 'linesCircle' + (i + 1);\n        });\n        const lineLines = view.append('g').classed('lineLines', true);\n        lineLines.selectAll('g').data(linesPoints[k]).enter().append('g').attr('class', function (d, i) {\n          return 'lineLine' + (i + 1);\n        });\n        if (k === 1) {\n          const copLineLines = view.append('g').classed('copLineLines', true);\n          copLineLines.selectAll('g').data(linesPoints[2]).enter().append('g').attr('class', function (d, i) {\n            return 'copLineLine' + (i + 1);\n          });\n        }\n        for (let i = 0; i < ringsData[k].length; i++) {\n          let point = points.select('.point' + (i + 1));\n          point = view.append('g').attr('transform', 'translate(' + linesPoints[k][i].x + ',' + linesPoints[k][i].y + ')');\n          const linesCircle = point.select('linesCircle' + (i + 1));\n          linesCircle.data(ringsData[k][i].linesColor).enter().append('g').attr('class', function (d, i) {\n            return 'lineCircle' + (i + 1);\n          });\n          // 画圆\n          const circle = point.append('circle');\n          circle.attr('cx', 0).attr('cy', 0).attr('r', ringsData[k][i].circleRadius).attr('fill', that.getColor1(linesPoints[k][i].proportion));\n          // 画环\n          const arcs = point.append('g').classed('arcs', true);\n          arcs.selectAll('g').data(ringsData[k][i].ringsWidth).enter().append('g').attr('class', function (d, i) {\n            return 'arc' + (i + 1);\n          });\n          for (let j = 0; j < ringsData[k][i].ringsWidth.length; j++) {\n            const defs = view.append('defs');\n            const linearGradient = defs.append('linearGradient').attr('id', 'linearColor' + i + '_' + j + '_' + k).attr('x1', '0%').attr('y1', '0%').attr('x2', '100%').attr('y2', '0%');\n            const stop1 = linearGradient.append('stop').attr('offset', '0%');\n            stop1.style('stop-color', ringsData[k][i].linesColor[j].head);\n            const stop2 = linearGradient.append('stop').attr('offset', '100%');\n            stop2.style('stop-color', ringsData[k][i].linesColor[j].rear);\n            let lineCircle = linesCircle.select('.lineCircle' + (j + 1));\n            lineCircle = d3.path();\n            lineCircle.arc(0, 0, that.chartConfig.lineRadius, -Math.PI / 2 + j * 2 * Math.PI / 5, -Math.PI / 2 + (j + 1) * 2 * Math.PI / 5 - 0.1);\n            point.append('path').attr('d', lineCircle.toString()).style('fill', 'none').style('stroke', 'url(#' + linearGradient.attr('id') + ')').style('stroke-width', '2');\n            let arc = arcs.select('.arc' + (i + 1));\n            arc = d3.arc().outerRadius(ringsData[k][i].ringsWidth[j]).innerRadius(that.chartConfig.ringMinRadius).startAngle(j * 2 * Math.PI / 5).endAngle((j + 1) * 2 * Math.PI / 5);\n            const outArc = point.append('path').attr('d', arc);\n            outArc.attr('fill', that.getColor(ringsData[k][i].ringsProportion[j]));\n          }\n          let lineLine = lineLines.select('lineLine' + (i + 1));\n          lineLine = point.append('line').attr('x1', 0).attr('y1', 0).attr('x2', that.chartConfig.lineRadius * Math.sin(linesPoints[k][i].angle)).attr('y2', that.chartConfig.lineRadius * Math.cos(linesPoints[k][i].angle)).attr('stroke-width', 1);\n          lineLine.attr('stroke', 'black').style('stroke-dasharray', '5.5');\n          if (k === 0) {\n            let copLineLine = lineLines.select('copLineLine' + (i + 1));\n            copLineLine = point.append('line').attr('x1', linesPoints[2][i].x - linesPoints[0][i].x).attr('y1', linesPoints[2][i].y - linesPoints[0][i].y).attr('x2', that.chartConfig.lineRadius * Math.sin(linesPoints[2][i].angle)).attr('y2', that.chartConfig.lineRadius * Math.cos(linesPoints[2][i].angle)).attr('stroke-width', 1);\n            copLineLine.attr('stroke', '#0081C9').style('stroke-dasharray', '5.5');\n          }\n        }\n      }\n\n      // 绘制折线图\n      const lines = main.append('g');\n      for (let j = 0; j < 2; j++) {\n        lines.selectAll('g').data(linesPoints[j]).enter().append('g').attr('class', function (d, i) {\n          return 'line' + (i + 1);\n        });\n        for (let i = 0; i < linesPoints[j].length - 1; i++) {\n          const line = lines.select('.line' + (i + 1));\n          line.append('line').attr('x1', linesPoints[j][i].x).attr('y1', linesPoints[j][i].y).attr('x2', linesPoints[j][i + 1].x).attr('y2', linesPoints[j][i + 1].y).attr('stroke-width', 2).attr('stroke', 'black');\n        }\n      }\n      const copLines = main.append('g');\n      copLines.selectAll('g').data(linesPoints[2]).enter().append('g').attr('class', function (d, i) {\n        return 'line' + (i + 1);\n      });\n      for (let i = 0; i < linesPoints[2].length - 1; i++) {\n        const line = copLines.select('.line' + (i + 1));\n        line.append('line').attr('x1', linesPoints[2][i].x).attr('y1', linesPoints[2][i].y).attr('x2', linesPoints[2][i + 1].x).attr('y2', linesPoints[2][i + 1].y).attr('stroke-width', 2).attr('stroke', '#0081C9');\n      }\n    },\n    // 将环图坐标返回\n    getRingData(file) {\n      const keyInd = Object.keys(file);\n      const ringsData = [];\n      for (let i = 0; i < keyInd.length; i++) {\n        const keyMonth = Object.keys(file[keyInd[i]]);\n        const copSum = [];\n        let circleRadius = 0;\n        const ringData = [];\n        let ringMax = 0;\n        for (let j = 0; j < keyMonth.length; j++) {\n          copSum[j] = 0;\n          for (let k = 0; k < 5; k++) {\n            copSum[j] += file[keyInd[i]][keyMonth[j]][k][1];\n            ringMax = file[keyInd[i]][keyMonth[j]][k][1] > ringMax ? file[keyInd[i]][keyMonth[j]][k][1] : ringMax;\n          }\n        }\n        const circleMin = Math.min.apply(null, copSum);\n        const circleMax = Math.max.apply(null, copSum);\n        for (let j = 0; j < keyMonth.length; j++) {\n          const ringsWidth = [];\n          const ringsProportion = [];\n          const lineColor = [];\n          for (let k = 0; k < 5; k++) {\n            const ringWidth = this.chartConfig.ringMinRadius + file[keyInd[i]][keyMonth[j]][k][1] / ringMax * (this.chartConfig.ringMaxRadius - this.chartConfig.ringMinRadius);\n            let ringProportion = 0;\n            if (j === 0) {\n              lineColor.push({\n                head: 'black',\n                rear: 'black'\n              });\n            } else {\n              ringProportion = (file[keyInd[i]][keyMonth[j]][k][1] - file[keyInd[i]][keyMonth[j - 1]][k][1]) / ringMax;\n              lineColor.push({\n                head: file[keyInd[i]][keyMonth[j]][k][0][0] < file[keyInd[i]][keyMonth[j - 1]][k][0][0] ? 'red' : 'green',\n                rear: file[keyInd[i]][keyMonth[j]][k][0][1] < file[keyInd[i]][keyMonth[j - 1]][k][0][1] ? 'red' : 'green'\n              });\n            }\n            circleRadius = this.chartConfig.circleMinRadius + (copSum[j] - circleMin) / (circleMax - circleMin) * (this.chartConfig.circleMaxRadius - this.chartConfig.circleMinRadius);\n            ringsWidth.push(ringWidth);\n            ringsProportion.push(ringProportion);\n          }\n          ringData.push({\n            circleRadius: circleRadius,\n            ringsWidth: ringsWidth,\n            ringsProportion: ringsProportion,\n            linesColor: lineColor\n          });\n        }\n        ringsData.push(ringData);\n      }\n      return ringsData;\n    },\n    // 将折线图坐标返回 file1计算点的位置\n    getLineData(file1, file2, file3) {\n      const keys1 = Object.keys(file1);\n      const linesPoints = [];\n      const max2 = Math.max.apply(null, file2[keys1[0]]) > Math.max.apply(null, file2[keys1[1]]) ? Math.max.apply(null, file2[keys1[0]]) : Math.max.apply(null, file2[keys1[1]]);\n      const min2 = Math.min.apply(null, file2[keys1[0]]) < Math.min.apply(null, file2[keys1[1]]) ? Math.min.apply(null, file2[keys1[0]]) : Math.min.apply(null, file2[keys1[1]]);\n      for (let j = 0; j < keys1.length; j++) {\n        const max = Math.max.apply(null, file1[keys1[j]]);\n        const min = Math.min.apply(null, file1[keys1[j]]);\n        const linesPoint = [];\n        const months = Object.keys(ringJson[keys1[j]]);\n        // console.log(ringJson[keys1[j]][months[0]][0][0][0])\n        for (let i = 0; i < file1[keys1[j]].length; i++) {\n          const x = 50 + i * this.chartConfig.monthRectWidth + i * 5;\n          const y = j === 0 ? 80 + (max - file1[keys1[j]][i]) / (max - min) * 160 : 360 + (max - file1[keys1[j]][i]) / (max - min) * 160;\n          // const name = file2[keys1[j]][i]\n          const proportion = (file2[keys1[j]][i] - min2) / (max2 - min2);\n          let angle = 0;\n          for (let k = 0; k < 5; k++) {\n            if (file2[keys1[j]][i] >= ringJson[keys1[j]][months[i]][k][0][0] && file2[keys1[j]][i] <= ringJson[keys1[j]][months[i]][k][0][1]) {\n              // angle = (k + (file2[keys1[j]][i] - ringJson[keys1[j]][months[i]][k][0][0]) / (ringJson[keys1[j]][months[i]][k][0][1] - ringJson[keys1[j]][months[i]][k][0][0]))\n              angle = k + (file2[keys1[j]][i] - ringJson[keys1[j]][months[i]][k][0][0]) / (ringJson[keys1[j]][months[i]][k][0][1] - ringJson[keys1[j]][months[i]][k][0][0]) * 0.4 * Math.PI;\n              break;\n            }\n          }\n          linesPoint.push({\n            x: x,\n            y: y,\n            // name: name,\n            proportion: proportion,\n            angle: angle\n          });\n        }\n        linesPoints.push(linesPoint);\n      }\n      const keys3 = Object.keys(file3);\n      const key3 = Object.keys(file3[keys3[0]]);\n      const ratio = [];\n      for (let i = 0; i < key3.length; i++) {\n        ratio.push(file3[keys3[0]][key3[i]][1]);\n      }\n      const max = Math.max.apply(null, ratio);\n      const min = Math.min.apply(null, ratio);\n      const linesPoint = [];\n      for (let i = 0; i < key3.length; i++) {\n        const x = 50 + i * this.chartConfig.monthRectWidth + i * 5;\n        const y = 80 + (max - ratio[i]) / (max - min) * 160;\n        const name = file3[keys3[0]][key3[i]][0];\n        let angle = 0;\n        for (let k = 0; k < 5; k++) {\n          if (file3[keys3[0]][key3[i]][0] >= ringJson[keys1[0]][key3[i]][k][0][0] && file3[keys3[0]][key3[i]][0] <= ringJson[keys1[0]][key3[i]][k][0][1]) {\n            angle = k + (file3[keys3[0]][key3[i]][0] - ringJson[keys1[0]][key3[i]][k][0][0]) / (ringJson[keys1[0]][key3[i]][k][0][1] - ringJson[keys1[0]][key3[i]][k][0][0]) * 0.4 * Math.PI;\n            break;\n          }\n        }\n        linesPoint.push({\n          x: x,\n          y: y,\n          name: name,\n          angle: angle\n        });\n      }\n      linesPoints.push(linesPoint);\n      return linesPoints;\n    },\n    // 按钮数据读取\n    getBtnData() {\n      const indName = Object.keys(corrInd);\n      this.chartValue.targetInd = indName[0];\n      const keys = Object.keys(corrInd[indName[0]]);\n      for (let i = 0; i < 5; i++) {\n        this.chartValue.correlation[i][0] = corrInd[indName[0]][keys[i]][0];\n        this.chartValue.correlation[i][1] = corrInd[indName[0]][keys[i]][1];\n      }\n    }\n  },\n  mounted() {\n    this.creatLineChart();\n    this.getBtnData();\n  }\n};","map":{"version":3,"names":["corrInd","industryRatioJson","industryLineJson","copJson","ringJson","d3","name","data","chartValue","targetInd","correlation","chartConfig","monthColor","monthRectWidth","monthRectHeight","circleMinRadius","circleMaxRadius","ringMinRadius","ringMaxRadius","lineRadius","computed","axisLength","methods","getColor","proportion","palette","idx","i","interpolateLab","getColor1","creatLineChart","that","keys","Object","main","select","append","classed","attr","rectAxiss","selectAll","enter","d","length","rectAxis","axis","style","linesPoints","getLineData","console","log","ringsData","getRingData","views","k","view","points","linesCircles","lineLines","copLineLines","point","x","y","linesCircle","linesColor","circle","circleRadius","arcs","ringsWidth","j","defs","linearGradient","stop1","head","stop2","rear","lineCircle","path","arc","Math","PI","toString","outerRadius","innerRadius","startAngle","endAngle","outArc","ringsProportion","lineLine","sin","angle","cos","copLineLine","lines","line","copLines","file","keyInd","keyMonth","copSum","ringData","ringMax","circleMin","min","apply","circleMax","max","lineColor","ringWidth","ringProportion","push","file1","file2","file3","keys1","max2","min2","linesPoint","months","keys3","key3","ratio","getBtnData","indName","mounted"],"sources":["/Users/younggaming/Documents/webstorm/ybcprogram/src/components/view4.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <svg width=\"100%\" height=\"100%\"></svg>\n  </div>\n</template>\n\n<script>\nimport corrInd from '../../../../pyCharm/ybcProject/data/corr_ind.json'\nimport industryRatioJson from '../../../../pyCharm/ybcProject/data/ind_ratio_obj.json'\nimport industryLineJson from '../../../../pyCharm/ybcProject/data/ind_line_obj.json'\nimport copJson from '../../../../pyCharm/ybcProject/data/ind_copp.json'\nimport ringJson from '../../../../pyCharm/ybcProject/data/ring_obj.json'\nimport * as d3 from 'd3'\nexport default {\n  name: 'view_4',\n  data () {\n    return {\n      chartValue: {\n        targetInd: '',\n        correlation: [['', ''], ['', ''], ['', ''], ['', ''], ['', '']]\n      },\n      chartConfig: {\n        monthColor: ['#C5E0B4', '#F8CBAD', '#FFE699', '#E7E6E6'],\n        monthRectWidth: 100,\n        monthRectHeight: 20,\n        circleMinRadius: 5,\n        circleMaxRadius: 15,\n        ringMinRadius: 20,\n        ringMaxRadius: 30,\n        lineRadius: 40\n      }\n    }\n  },\n  computed: {\n    // 计算下面坐标轴长度，逻辑将来在写\n    axisLength: function () {\n      return 4\n    }\n  },\n  methods: {\n    // 根据比例获取响应颜色\n    getColor (proportion) {\n      const palette = [\n        ['#820000', '#FF8282'],\n        ['#008200', '#82FF82']\n      ]\n      if (proportion === 0) return '#0000FF'\n      const idx = proportion > 0 ? 0 : 1\n      const i = d3.interpolateLab(palette[idx][1], palette[idx][0])\n      return i(proportion)\n    },\n\n    getColor1 (proportion) {\n      const palette = ['#008200', '#60E260']\n      const i = d3.interpolateLab(palette[1], palette[0])\n      return i(proportion)\n    },\n\n    // 画图\n    creatLineChart () {\n      const that = this\n      const keys = Object.keys(industryRatioJson)\n      const main = d3.select('.container svg')\n        .append('g')\n        .classed('main', true)\n        .attr('transform', 'translate(' + 0 + ',' + 0 + ')')\n\n      // 画彩色坐标轴\n      const rectAxiss = main.append('g')\n        .classed('sectors', true)\n      rectAxiss.selectAll('g')\n        .data(industryRatioJson[keys[0]] + industryRatioJson[keys[1]])\n        .enter()\n        .append('g')\n        .attr('class', function (d, i) {\n          return 'rectAxis' + (i + 1)\n        })\n      for (let i = 0; i < industryRatioJson[keys[0]].length + industryRatioJson[keys[1]].length; i++) {\n        const rectAxis = rectAxiss.select('.rectAxis' + (i + 1))\n        if (i < industryRatioJson[keys[0]].length) {\n          rectAxis.append('rect')\n            .attr('x', i * that.chartConfig.monthRectWidth + 5 * i)\n            .attr('y', 0)\n            .attr('width', that.chartConfig.monthRectWidth)\n            .attr('height', that.chartConfig.monthRectHeight)\n            .attr('fill', that.chartConfig.monthColor[i % 4])\n        } else {\n          rectAxis.append('rect')\n            .attr('x', (i - industryRatioJson[keys[0]].length) * that.chartConfig.monthRectWidth + 5 * (i - 12))\n            .attr('y', 580)\n            .attr('width', that.chartConfig.monthRectWidth)\n            .attr('height', that.chartConfig.monthRectHeight)\n            .attr('fill', that.chartConfig.monthColor[(i - industryRatioJson[keys[0]].length) % 4])\n        }\n      }\n\n      // 画中间虚线\n      const axis = main.append('line')\n        .classed('axis', true)\n      axis.attr('x1', 0)\n        .attr('y1', 299)\n        .attr('x2', 1790)\n        .attr('y2', 299)\n        .attr('stroke-width', 2)\n        .attr('stroke', 'black')\n        .style('stroke-dasharray', '5.5')\n\n      const linesPoints = this.getLineData(industryRatioJson, industryLineJson, copJson)\n      console.log(linesPoints)\n      // 画圆环\n      const ringsData = that.getRingData(ringJson)\n      const views = main.append('g')\n        .classed('views', true)\n      views.selectAll('g')\n        .data(ringsData)\n        .enter()\n        .append('g')\n        .attr('class', function (d, i) {\n          return 'view' + (i + 1)\n        })\n      for (let k = 0; k < ringsData.length; k++) {\n        let view = views.select('.view' + (k + 1))\n        view = views.append('g').attr('transform', 'translate(' + 0 + ',' + 0 + ')')\n        const points = view.append('g')\n          .classed('points', true)\n        points.selectAll('g')\n          .data(ringsData[k])\n          .enter()\n          .append('g')\n          .attr('class', function (d, i) {\n            return 'point' + (i + 1)\n          })\n        const linesCircles = view.append('g')\n          .classed('linesCircles', true)\n        linesCircles.selectAll('g')\n          .data(ringsData[k])\n          .enter()\n          .append('g')\n          .attr('class', function (d, i) {\n            return 'linesCircle' + (i + 1)\n          })\n        const lineLines = view.append('g')\n          .classed('lineLines', true)\n        lineLines.selectAll('g')\n          .data(linesPoints[k])\n          .enter()\n          .append('g')\n          .attr('class', function (d, i) {\n            return 'lineLine' + (i + 1)\n          })\n        if (k === 1) {\n          const copLineLines = view.append('g')\n            .classed('copLineLines', true)\n          copLineLines.selectAll('g')\n            .data(linesPoints[2])\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n              return 'copLineLine' + (i + 1)\n            })\n        }\n        for (let i = 0; i < ringsData[k].length; i++) {\n          let point = points.select('.point' + (i + 1))\n          point = view.append('g').attr('transform', 'translate(' + linesPoints[k][i].x + ',' + linesPoints[k][i].y + ')')\n          const linesCircle = point.select('linesCircle' + (i + 1))\n          linesCircle.data(ringsData[k][i].linesColor)\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n              return 'lineCircle' + (i + 1)\n            })\n          // 画圆\n          const circle = point.append('circle')\n          circle.attr('cx', 0)\n            .attr('cy', 0)\n            .attr('r', ringsData[k][i].circleRadius)\n            .attr('fill', that.getColor1(linesPoints[k][i].proportion))\n          // 画环\n          const arcs = point.append('g')\n            .classed('arcs', true)\n          arcs.selectAll('g')\n            .data(ringsData[k][i].ringsWidth)\n            .enter()\n            .append('g')\n            .attr('class', function (d, i) {\n              return 'arc' + (i + 1)\n            })\n          for (let j = 0; j < ringsData[k][i].ringsWidth.length; j++) {\n            const defs = view.append('defs')\n            const linearGradient = defs.append('linearGradient')\n              .attr('id', 'linearColor' + i + '_' + j + '_' + k)\n              .attr('x1', '0%')\n              .attr('y1', '0%')\n              .attr('x2', '100%')\n              .attr('y2', '0%')\n            const stop1 = linearGradient.append('stop')\n              .attr('offset', '0%')\n            stop1.style('stop-color', ringsData[k][i].linesColor[j].head)\n            const stop2 = linearGradient.append('stop')\n              .attr('offset', '100%')\n            stop2.style('stop-color', ringsData[k][i].linesColor[j].rear)\n            let lineCircle = linesCircle.select('.lineCircle' + (j + 1))\n            lineCircle = d3.path()\n            lineCircle.arc(0, 0, that.chartConfig.lineRadius, -Math.PI / 2 + j * 2 * Math.PI / 5, -Math.PI / 2 + (j + 1) * 2 * Math.PI / 5 - 0.1)\n            point.append('path')\n              .attr('d', lineCircle.toString())\n              .style('fill', 'none')\n              .style('stroke', 'url(#' + linearGradient.attr('id') + ')')\n              .style('stroke-width', '2')\n            let arc = arcs.select('.arc' + (i + 1))\n            arc = d3.arc()\n              .outerRadius(ringsData[k][i].ringsWidth[j])\n              .innerRadius(that.chartConfig.ringMinRadius)\n              .startAngle(j * 2 * Math.PI / 5)\n              .endAngle((j + 1) * 2 * Math.PI / 5)\n            const outArc = point.append('path')\n              .attr('d', arc)\n            outArc.attr('fill', that.getColor(ringsData[k][i].ringsProportion[j]))\n          }\n          let lineLine = lineLines.select('lineLine' + (i + 1))\n          lineLine = point.append('line')\n            .attr('x1', 0)\n            .attr('y1', 0)\n            .attr('x2', that.chartConfig.lineRadius * Math.sin(linesPoints[k][i].angle))\n            .attr('y2', that.chartConfig.lineRadius * Math.cos(linesPoints[k][i].angle))\n            .attr('stroke-width', 1)\n          lineLine.attr('stroke', 'black').style('stroke-dasharray', '5.5')\n          if (k === 0) {\n            let copLineLine = lineLines.select('copLineLine' + (i + 1))\n            copLineLine = point.append('line')\n              .attr('x1', linesPoints[2][i].x - linesPoints[0][i].x)\n              .attr('y1', linesPoints[2][i].y - linesPoints[0][i].y)\n              .attr('x2', that.chartConfig.lineRadius * Math.sin(linesPoints[2][i].angle))\n              .attr('y2', that.chartConfig.lineRadius * Math.cos(linesPoints[2][i].angle))\n              .attr('stroke-width', 1)\n            copLineLine.attr('stroke', '#0081C9').style('stroke-dasharray', '5.5')\n          }\n        }\n      }\n\n      // 绘制折线图\n      const lines = main.append('g')\n      for (let j = 0; j < 2; j++) {\n        lines.selectAll('g')\n          .data(linesPoints[j])\n          .enter()\n          .append('g')\n          .attr('class', function (d, i) {\n            return 'line' + (i + 1)\n          })\n        for (let i = 0; i < linesPoints[j].length - 1; i++) {\n          const line = lines.select('.line' + (i + 1))\n          line.append('line')\n            .attr('x1', linesPoints[j][i].x)\n            .attr('y1', linesPoints[j][i].y)\n            .attr('x2', linesPoints[j][i + 1].x)\n            .attr('y2', linesPoints[j][i + 1].y)\n            .attr('stroke-width', 2)\n            .attr('stroke', 'black')\n        }\n      }\n      const copLines = main.append('g')\n      copLines.selectAll('g')\n        .data(linesPoints[2])\n        .enter()\n        .append('g')\n        .attr('class', function (d, i) {\n          return 'line' + (i + 1)\n        })\n      for (let i = 0; i < linesPoints[2].length - 1; i++) {\n        const line = copLines.select('.line' + (i + 1))\n        line.append('line')\n          .attr('x1', linesPoints[2][i].x)\n          .attr('y1', linesPoints[2][i].y)\n          .attr('x2', linesPoints[2][i + 1].x)\n          .attr('y2', linesPoints[2][i + 1].y)\n          .attr('stroke-width', 2)\n          .attr('stroke', '#0081C9')\n      }\n    },\n\n    // 将环图坐标返回\n    getRingData (file) {\n      const keyInd = Object.keys(file)\n      const ringsData = []\n      for (let i = 0; i < keyInd.length; i++) {\n        const keyMonth = Object.keys(file[keyInd[i]])\n        const copSum = []\n        let circleRadius = 0\n        const ringData = []\n        let ringMax = 0\n        for (let j = 0; j < keyMonth.length; j++) {\n          copSum[j] = 0\n          for (let k = 0; k < 5; k++) {\n            copSum[j] += file[keyInd[i]][keyMonth[j]][k][1]\n            ringMax = file[keyInd[i]][keyMonth[j]][k][1] > ringMax ? file[keyInd[i]][keyMonth[j]][k][1] : ringMax\n          }\n        }\n        const circleMin = Math.min.apply(null, copSum)\n        const circleMax = Math.max.apply(null, copSum)\n        for (let j = 0; j < keyMonth.length; j++) {\n          const ringsWidth = []\n          const ringsProportion = []\n          const lineColor = []\n          for (let k = 0; k < 5; k++) {\n            const ringWidth = this.chartConfig.ringMinRadius + file[keyInd[i]][keyMonth[j]][k][1] / ringMax * (this.chartConfig.ringMaxRadius - this.chartConfig.ringMinRadius)\n            let ringProportion = 0\n            if (j === 0) {\n              lineColor.push({\n                head: 'black',\n                rear: 'black'\n              })\n            } else {\n              ringProportion = (file[keyInd[i]][keyMonth[j]][k][1] - file[keyInd[i]][keyMonth[j - 1]][k][1]) / ringMax\n              lineColor.push({\n                head: file[keyInd[i]][keyMonth[j]][k][0][0] < file[keyInd[i]][keyMonth[j - 1]][k][0][0] ? 'red' : 'green',\n                rear: file[keyInd[i]][keyMonth[j]][k][0][1] < file[keyInd[i]][keyMonth[j - 1]][k][0][1] ? 'red' : 'green'\n              })\n            }\n            circleRadius = this.chartConfig.circleMinRadius + (copSum[j] - circleMin) / (circleMax - circleMin) * (this.chartConfig.circleMaxRadius - this.chartConfig.circleMinRadius)\n            ringsWidth.push(ringWidth)\n            ringsProportion.push(ringProportion)\n          }\n          ringData.push({\n            circleRadius: circleRadius,\n            ringsWidth: ringsWidth,\n            ringsProportion: ringsProportion,\n            linesColor: lineColor\n          })\n        }\n        ringsData.push(ringData)\n      }\n      return ringsData\n    },\n\n    // 将折线图坐标返回 file1计算点的位置\n    getLineData (file1, file2, file3) {\n      const keys1 = Object.keys(file1)\n      const linesPoints = []\n      const max2 = Math.max.apply(null, file2[keys1[0]]) > Math.max.apply(null, file2[keys1[1]]) ? Math.max.apply(null, file2[keys1[0]]) : Math.max.apply(null, file2[keys1[1]])\n      const min2 = Math.min.apply(null, file2[keys1[0]]) < Math.min.apply(null, file2[keys1[1]]) ? Math.min.apply(null, file2[keys1[0]]) : Math.min.apply(null, file2[keys1[1]])\n      for (let j = 0; j < keys1.length; j++) {\n        const max = Math.max.apply(null, file1[keys1[j]])\n        const min = Math.min.apply(null, file1[keys1[j]])\n        const linesPoint = []\n        const months = Object.keys(ringJson[keys1[j]])\n        // console.log(ringJson[keys1[j]][months[0]][0][0][0])\n        for (let i = 0; i < file1[keys1[j]].length; i++) {\n          const x = 50 + i * this.chartConfig.monthRectWidth + i * 5\n          const y = j === 0 ? 80 + (max - file1[keys1[j]][i]) / (max - min) * 160 : 360 + (max - file1[keys1[j]][i]) / (max - min) * 160\n          // const name = file2[keys1[j]][i]\n          const proportion = (file2[keys1[j]][i] - min2) / (max2 - min2)\n          let angle = 0\n          for (let k = 0; k < 5; k++) {\n            if (file2[keys1[j]][i] >= ringJson[keys1[j]][months[i]][k][0][0] && file2[keys1[j]][i] <= ringJson[keys1[j]][months[i]][k][0][1]) {\n              // angle = (k + (file2[keys1[j]][i] - ringJson[keys1[j]][months[i]][k][0][0]) / (ringJson[keys1[j]][months[i]][k][0][1] - ringJson[keys1[j]][months[i]][k][0][0]))\n              angle = (k + (file2[keys1[j]][i] - ringJson[keys1[j]][months[i]][k][0][0]) / (ringJson[keys1[j]][months[i]][k][0][1] - ringJson[keys1[j]][months[i]][k][0][0]) * 0.4 * Math.PI)\n              break\n            }\n          }\n          linesPoint.push({\n            x: x,\n            y: y,\n            // name: name,\n            proportion: proportion,\n            angle: angle\n          })\n        }\n        linesPoints.push(linesPoint)\n      }\n      const keys3 = Object.keys(file3)\n      const key3 = Object.keys(file3[keys3[0]])\n      const ratio = []\n      for (let i = 0; i < key3.length; i++) {\n        ratio.push(file3[keys3[0]][key3[i]][1])\n      }\n      const max = Math.max.apply(null, ratio)\n      const min = Math.min.apply(null, ratio)\n      const linesPoint = []\n      for (let i = 0; i < key3.length; i++) {\n        const x = 50 + i * this.chartConfig.monthRectWidth + i * 5\n        const y = 80 + (max - ratio[i]) / (max - min) * 160\n        const name = file3[keys3[0]][key3[i]][0]\n        let angle = 0\n        for (let k = 0; k < 5; k++) {\n          if (file3[keys3[0]][key3[i]][0] >= ringJson[keys1[0]][key3[i]][k][0][0] && file3[keys3[0]][key3[i]][0] <= ringJson[keys1[0]][key3[i]][k][0][1]) {\n            angle = (k + (file3[keys3[0]][key3[i]][0] - ringJson[keys1[0]][key3[i]][k][0][0]) / (ringJson[keys1[0]][key3[i]][k][0][1] - ringJson[keys1[0]][key3[i]][k][0][0]) * 0.4 * Math.PI)\n            break\n          }\n        }\n        linesPoint.push({\n          x: x,\n          y: y,\n          name: name,\n          angle: angle\n        })\n      }\n      linesPoints.push(linesPoint)\n      return linesPoints\n    },\n\n    // 按钮数据读取\n    getBtnData () {\n      const indName = Object.keys(corrInd)\n      this.chartValue.targetInd = indName[0]\n      const keys = Object.keys(corrInd[indName[0]])\n      for (let i = 0; i < 5; i++) {\n        this.chartValue.correlation[i][0] = corrInd[indName[0]][keys[i]][0]\n        this.chartValue.correlation[i][1] = corrInd[indName[0]][keys[i]][1]\n      }\n    }\n  },\n  mounted () {\n    this.creatLineChart()\n    this.getBtnData()\n  }\n}\n</script>\n\n<style scoped>\n\n.container {\n  width: 1700px;\n  height: 600px;\n  /*border: 2px solid black;*/\n}\n\n.container1 {\n  width: 1700px;\n  height: 150px;\n  /*border: 2px solid black;*/\n}\n\n.top {\n  width: 100%;\n  height: 20%;\n  display: flex;\n  /*border: 1px dashed black;*/\n}\n\n.btn {\n  width: 160px;\n  height: 100%;\n  background: #9DC3E6;\n  margin-left: 40px;\n  border-color: white;\n  font-size: 16px;\n}\n\n.below {\n  width: 100%;\n  height: 60%;\n  display: flex;\n  margin-top: 20px;\n}\n\n.tarInd {\n  width: 80px;\n  height: 60%;\n  margin-top: 35px;\n  background: #366AB9;\n  color: white;\n  font-size: 16px;\n}\n\n.corrBtn {\n  width: 15%;\n  height: 100%;\n  display: flex;\n  margin-left: 40px;\n  /*border: 1px dashed black;*/\n}\n\n.marginDiv {\n  margin-left: 1px;\n  width: 100%;\n}\n\n.text {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.corr {\n  margin-top: 10px;\n  width: 200px;\n  background: #54B435;\n  color: white;\n  border-color: white;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}